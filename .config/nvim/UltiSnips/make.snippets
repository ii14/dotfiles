snippet cxxflags "standard CXXFLAGS"
CXXFLAGS = -std=c++14 -Wall -Wextra -g
endsnippet

snippet cc "CC"
$1: $2$3
	$(CC) $(CFLAGS) -c -o $1 $2$4
endsnippet

snippet cxx "CXX"
$1: $2$3
	$(CXX) $(CXXFLAGS) -c -o $1 $2$4
endsnippet

snippet cxxtemp
INCLUDES =
CXXFLAGS = -std=c++14 -Wall -Wextra -g $(INCLUDES)
LFLAGS   =

SOURCES  = $1
OBJECTS  = $(SOURCES:.cpp=.o)

TARGET   = main

all: $(TARGET)

$2

$(TARGET): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJECTS) $(LFLAGS)

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

clean:
	rm -rf $(TARGET) $(OBJECTS)

.PHONY: all clean
endsnippet

snippet CXX "CXX template"
TARGET   = ${1:main}
SOURCES  = ${2:main.cpp}
CXXFLAGS = ${3:-std=c++17 -Wall -Wextra -g}
INCLUDE  = ${4}
LDFLAGS  = ${5}

OBJS     = $(addprefix build/,$(SOURCES:.cpp=.o))
DEPS     = $(OBJS:.o=.d)

all: $(TARGET)

build/%.o: %.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(INCLUDE) -c -MMD -o $@ $<

$(TARGET): $(OBJS)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJS) $(LDFLAGS)

-include $(DEPS)

.PHONY: all clean info

clean:
	@rm -rvf $(TARGET) $(OBJS) $(DEPS)

info:
	@echo "[*] Target:       $(TARGET)"
	@echo "[*] Sources:      $(SOURCES)"
	@echo "[*] Objects:      $(OBJS)"
	@echo "[*] Dependencies: $(DEPS)"
endsnippet
