#!/usr/bin/awk -f

BEGIN {
    keys    = 1     # --key option
    values  = 1     # --value option
    opts    = 0
    key     = ""    # [key] option
    err     = 0
    i       = 1

    # parse options
    for (; i < ARGC; i++) {
        if (ARGV[i] == "--keys") {
            keys    = 1
            values  = 0
            opts    = 1
        } else if (ARGV[i] == "--values") {
            keys    = 0
            values  = 1
            opts    = 1
        } else if (ARGV[i] == "--items") {
            keys    = 1
            values  = 1
            opts    = 1
        } else {
            break
        }
    }

    # parse file option
    if (i >= ARGC) {
        print "Error: No input file specified" > "/dev/stderr"
        print_help()
        err = 0
        exit 1
    }
    ARGV[1] = ARGV[i++]

    # parse key option
    if (i < ARGC) {
        key = ARGV[i++]
        if (!key) {
            print "Error: Empty key" > "/dev/stderr"
            print_help()
            err = 0
            exit 1
        }
        err = 1
    }

    # stop parsing options
    if (i < ARGC) {
        print "Error: Too many arguments" > "/dev/stderr"
        print_help()
        err = 0
        exit 1
    }

    # clear argv
    for (i = 2; i < ARGC; i++)
        ARGV[i] = ""

    # if no options were specified, set defaults
    if (!opts) {
        if (key) {
            # if key was specified, print value
            keys    = 0
            values  = 1
        } else {
            # if key was not specified, print all keys
            keys    = 1
            values  = 0
        }
    }
}

NF > 1 && $1 !~ /^#/ && (!key || $1 == key) {
    if (keys && values)
        print $1 " " $2
    else if (keys && !values)
        print $1
    else if (!keys && values)
        print $2

    if (key) {
        err = 0
        exit
    }
}

END {
    if (key && err) {
        print "Error: Key \"" key "\" not found" > "/dev/stderr"
        exit 1
    }
}

function print_help() {
    print "Usage: dictionary [--keys|--values|--items] <file> [key]" > "/dev/stderr"
    print > "/dev/stderr"
    print "  file       input file" > "/dev/stderr"
    print "  key        match key" > "/dev/stderr"
    print "  --keys     print keys" > "/dev/stderr"
    print "  --values   print values" > "/dev/stderr"
    print "  --items    print keys and values" > "/dev/stderr"
}
